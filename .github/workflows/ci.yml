name: CI/CD Pipeline

on:
  push:
    branches: [ main, work ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 23
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 23
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Run tests
      run: ./gradlew test
      
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Gradle Tests
        path: app/build/test-results/test/TEST-*.xml
        reporter: java-junit

  build-and-release:
    needs: test-and-lint
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 23
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 23
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Build application
      run: ./gradlew clean build
      
    - name: Create fat JAR
      run: ./gradlew fatJar
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: image-filtering-app
        path: app/build/libs/app-all.jar
        retention-days: 30
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: pr-${{ github.event.number }}-${{ github.sha }}
        name: PR #${{ github.event.number }} - Image Filtering App
        body: |
          ## Changes in this PR
          ${{ github.event.pull_request.body }}
          
          ## Build Artifacts
          - `app-all.jar` - Executable JAR file
          
          ## Usage
          ```bash
          java -jar app-all.jar <input_path> <filter_name> [convolution_mode] [output_path]
          ```
        files: app/build/libs/app-all.jar
        draft: false
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
