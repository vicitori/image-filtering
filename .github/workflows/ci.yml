name: Image filtering CI + release

on:
  push:
    branches: [ main, work ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 23

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Build and run tests
        run: ./gradlew clean build

      - name: Run Checkstyle
        run: ./gradlew checkstyleMain || true

  pr-artifact:
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 23

      - name: Build fat JAR
        run: ./gradlew clean fatJar

      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v3
        with:
          name: pr-fat-jar
          path: build/libs/app-all.jar

  release:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 23

      - name: Build fat JAR
        run: ./gradlew clean fatJar

      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ github.run_number }}-main
          name: Release ${{ github.run_number }}
          body: "Auto-generated release for run #${{ github.run_number }}"

      - name: Upload JAR to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/libs/app-all.jar
          asset_name: filtering.jar
          asset_content_type: application/java-archive
